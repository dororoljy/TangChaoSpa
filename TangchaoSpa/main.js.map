{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-customer/add-customer.component.ts","./src/app/components/add-customer/add-customer.component.html","./src/app/components/customers/customers.component.ts","./src/app/components/customers/customers.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/todo-item/todo-item.component.ts","./src/app/components/todo-item/todo-item.component.html","./src/app/components/todos/todos.component.ts","./src/app/components/todos/todos.component.html","./src/app/models/Customer.ts","./src/app/restapi.service.ts","./src/app/service/auth-gaurd.service.ts","./src/app/service/authentication.service.ts","./src/app/service/basic-auth-http-intercept.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\n\nimport { TodosComponent } from './components/todos/todos.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { AuthGaurdService } from './service/auth-gaurd.service';\n\nconst routes: Routes = [\n  { path: '', component: TodosComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'customers',\n    component: CustomersComponent,\n    canActivate: [AuthGaurdService]\n  },\n  {\n    path: 'addCustomer',\n    component: AddCustomerComponent,\n    canActivate: [AuthGaurdService]\n  },\n  { path: 'logout', component: LogoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TangchaoSpa';\n}\n","<!-- <div>\n  <app-todos> </app-todos>\n</div> -->\n<router-outlet> </router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './components/todos/todos.component';\nimport { TodoItemComponent } from './components/todo-item/todo-item.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RestapiService } from './restapi.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { BasicAuthHttpInterceptService } from './service/basic-auth-http-intercept.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodoItemComponent,\n    LoginComponent,\n    CustomersComponent,\n    AddCustomerComponent,\n    HeaderComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BasicAuthHttpInterceptService,\n      multi: true\n    },\n    RestapiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RestapiService } from '../../restapi.service';\nimport { Customer } from '../../models/Customer';\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n  customer: Customer = new Customer(\n    0,\n    '',\n    '',\n    this.getDate(),\n    this.getTime(),\n    '',\n    '',\n    false\n  );\n  date: Date;\n  time: String;\n  getDate() {\n    var today = new Date();\n    var curDate =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    return curDate;\n  }\n  getTime() {\n    var today = new Date();\n    var curTime = today.getHours() + ':' + today.getMinutes();\n    return curTime;\n  }\n\n  constructor(private service: RestapiService) {}\n\n  ngOnInit(): void {}\n\n  createCustomer(): void {\n    this.service.addCustomer(this.customer).subscribe(data => {\n      alert('customer created successfully.');\n    });\n  }\n}\n","<app-header> </app-header>\n<div class=\"col-md-6\" style=\"margin: 0px auto;\">\n  <h2 class=\"text-center\" style=\"margin:10px;\">Add Customer Appointment</h2>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input\n        type=\"name\"\n        [(ngModel)]=\"customer.name\"\n        placeholder=\"name\"\n        name=\"name\"\n        class=\"form-control\"\n        id=\"name\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone:</label>\n      <input\n        [(ngModel)]=\"customer.phone\"\n        placeholder=\"phone\"\n        name=\"phone\"\n        class=\"form-control\"\n        id=\"phone\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"appointmentTime\">Appointment Time: </label>\n      <input type=\"date\" name=\"date\" [(ngModel)]=\"customer.date\" />\n      <input type=\"time\" name=\"time\" [(ngModel)]=\"customer.time\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"detail\">Detail: </label>\n      <input\n        [(ngModel)]=\"customer.detail\"\n        placeholder=\"detail\"\n        name=\"detail\"\n        class=\"form-control\"\n        id=\"detail\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"other\">Other: </label>\n      <input\n        [(ngModel)]=\"customer.other\"\n        placeholder=\"other\"\n        name=\"other\"\n        class=\"form-control\"\n        id=\"other\"\n      />\n    </div>\n    <button class=\"btn btn-success\" (click)=\"createCustomer()\">Create</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RestapiService } from '../../restapi.service';\nimport { Customer } from '../../models/Customer';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  phone: string;\n  totalRecords: number;\n  page: number = 1;\n  EditRowID: any = '';\n  customers: Customer[];\n  constructor(private service: RestapiService) {}\n\n  ngOnInit(): void {\n    this.service\n      .getCustomers()\n      .subscribe(response => this.handleSuccessResponse(response));\n  }\n  setClasses(customer) {\n    //Only apply is-complete style, when customer.completed is true\n    let classes = {\n      'is-complete': customer.completed\n    };\n    return classes;\n  }\n  public custom_sort(a, b) {\n    if (!a.completed && !b.completed) {\n      let aStringTime = a.date.substring(0, 10);\n      let bStringTime = b.date.substring(0, 10);\n      if (aStringTime === bStringTime) {\n        return a.time.localeCompare(b.time);\n      } else {\n        return aStringTime.localeCompare(bStringTime);\n      }\n    } else if (a.completed && b.completed) {\n      let aStringTime = a.date.substring(0, 10);\n      let bStringTime = b.date.substring(0, 10);\n      if (aStringTime === bStringTime) {\n        return b.time.localeCompare(a.time);\n      } else {\n        return bStringTime.localeCompare(aStringTime);\n      }\n    } else if (a.completed) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  handleSuccessResponse(response) {\n    this.customers = response;\n    this.customers.sort(this.custom_sort);\n    this.totalRecords = this.customers.length;\n  }\n  deleteCustomer(customer: Customer): void {\n    this.service.deleteCustomer(customer).subscribe(data => {\n      this.customers = this.customers.filter(u => u !== customer);\n    });\n    alert('You have successful delete cusotmer');\n    location.reload();\n  }\n  ChangeCustomerCompleted(customer: Customer): void {\n    this.service.changeCompleted(customer).subscribe(data => {\n      this.customers = this.customers.filter(u => u !== customer);\n    });\n    alert('You have successful change cusotmer status');\n    location.reload();\n  }\n  updateCustomer(customer: Customer): void {\n    this.service.updateCustomer(customer).subscribe(data => {\n      this.customers = this.customers.filter(u => u !== customer);\n    });\n    alert('You have successful update cusotmer');\n    location.reload();\n  }\n\n  edit(val) {\n    this.EditRowID = val;\n  }\n  search() {\n    if (this.phone != '') {\n      this.customers = this.customers.filter(res => {\n        return res.phone\n          .toLocaleLowerCase()\n          .match(this.phone.toLocaleLowerCase());\n      });\n    } else if (this.phone == '') {\n      this.ngOnInit();\n    }\n  }\n}\n","<app-header> </app-header>\n<!-- <div class=\"col-md-6\" align=\"center\" style=\"margin: 0px auto;\"> -->\n\n<div class=\"col-md-6\">\n  <h3 style=\"margin-top:10px;\">Enter Customer's phone number</h3>\n  <input\n    type=\"text\"\n    [(ngModel)]=\"phone\"\n    (input)=\"search()\"\n    style=\"margin:10px;\"\n  />\n\n  <table class=\"table table-bordered\">\n    <thead></thead>\n    <tr>\n      <th>id</th>\n      <th>name</th>\n      <th>phone</th>\n      <th>Appointment Date</th>\n      <th>Appointment Time</th>\n      <th>History</th>\n      <th>other</th>\n      <th>Operations</th>\n    </tr>\n\n    <tbody>\n      <tr\n        *ngFor=\"\n          let customer of customers\n            | paginate\n              : { itemsPerPage: 10, currentPage: page, totaltems: totalRecords }\n        \"\n        [ngClass]=\"setClasses(customer)\"\n      >\n        <td>{{ customer.id }}</td>\n\n        <td *ngIf=\"customer.id === EditRowID\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"customer.name\"\n            align=\"center\"\n            style=\"margin: 0px auto;\"\n          />\n        </td>\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.name }}\n        </td>\n        <td *ngIf=\"customer.id === EditRowID\">\n          <input type=\"text\" [(ngModel)]=\"customer.phone\" />\n        </td>\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.phone }}\n        </td>\n\n        <td *ngIf=\"customer.id === EditRowID\">\n          <input type=\"date\" [(ngModel)]=\"customer.date\" />\n        </td>\n\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.date.substring(0, 10) }}\n        </td>\n        <td *ngIf=\"customer.id === EditRowID\">\n          <input type=\"time\" [(ngModel)]=\"customer.time\" />\n        </td>\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.time }}\n        </td>\n        <td *ngIf=\"customer.id === EditRowID\">\n          <textarea type=\"text\" [(ngModel)]=\"customer.detail\"> </textarea>\n        </td>\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.detail }}\n        </td>\n        <td *ngIf=\"customer.id === EditRowID\">\n          <textarea type=\"text\" [(ngModel)]=\"customer.other\"></textarea>\n        </td>\n        <td *ngIf=\"customer.id !== EditRowID\" (click)=\"edit(customer.id)\">\n          {{ customer.other }}\n        </td>\n        <td>\n          Completed<input\n            type=\"checkbox\"\n            (click)=\"ChangeCustomerCompleted(customer)\"\n          />\n          <button\n            class=\"btn btn-danger\"\n            (click)=\"deleteCustomer(customer)\"\n            style=\"margin:5px;\"\n          >\n            Delete\n          </button>\n          <br />\n          <button\n            class=\"btn btn-success\"\n            (click)=\"updateCustomer(customer)\"\n            style=\"margin:5px;\"\n          >\n            Update\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div>\n    <pagination-controls (pageChange)=\"page = $event\"></pagination-controls>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../service/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public loginService: AuthenticationService) {}\n\n  ngOnInit(): void {}\n}\n","<header>\n  <nav\n    class=\"navbar navbar-expand-md navbar-dark bg-dark\"\n    style=\"background-color:white;\"\n  >\n    <div>\n      <a routerLink=\"\" class=\"navbar-brand\">Tangchao Spa</a>\n    </div>\n\n    <ul class=\"navbar-nav\">\n      <li>\n        <a\n          *ngIf=\"loginService.isUserLoggedIn()\"\n          routerLink=\"/customers\"\n          class=\"nav-link\"\n          >View Customers</a\n        >\n      </li>\n      <li>\n        <a\n          *ngIf=\"loginService.isUserLoggedIn()\"\n          routerLink=\"/addCustomer\"\n          class=\"nav-link\"\n          >Add New Customer</a\n        >\n      </li>\n      <li>\n        <a\n          *ngIf=\"!loginService.isUserLoggedIn()\"\n          routerLink=\"/login\"\n          class=\"nav-link\"\n          >Login</a\n        >\n      </li>\n      <li>\n        <a\n          *ngIf=\"loginService.isUserLoggedIn()\"\n          routerLink=\"/logout\"\n          class=\"nav-link\"\n          >Log out</a\n        >\n      </li>\n      <li>\n        <a class=\"nav-link\">此网站由爱静静的啊辉开发</a>\n      </li>\n    </ul>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport { RestapiService } from '../../restapi.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../..//service/authentication.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username = '';\n  password = '';\n  invalidLogin = false;\n  constructor(\n    private router: Router,\n    private loginservice: AuthenticationService\n  ) {}\n\n  ngOnInit(): void {}\n  checkLogin() {\n    this.loginservice.authenticate(this.username, this.password).subscribe(\n      data => {\n        this.router.navigate(['customers']);\n        this.invalidLogin = false;\n      },\n      error => {\n        alert('Username of Password are wrong');\n        this.invalidLogin = true;\n      }\n    );\n  }\n}\n","<app-header> </app-header>\n<div class=\"container\">\n  <div>\n    User Name :\n    <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" /> Password :\n    <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" />\n  </div>\n  <button (click)=\"checkLogin()\" class=\"btn btn-success\">\n    Login\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../service/authentication.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.authentocationService.logOut();\n    this.router.navigate(['login']);\n  }\n}\n","<app-header> </app-header>\n<p>logout works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Todo } from '../../models/Todo';\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css']\n})\nexport class TodoItemComponent implements OnInit {\n  @Input() todo: Todo;\n  name: string = 'hey';\n  constructor() {}\n\n  ngOnInit() {\n    console.log(this.todo);\n  }\n\n  setClasses() {\n    let classes = {\n      'service-Name': this.todo.ServiceName\n    };\n    return classes;\n  }\n  // onToggle(todo) {\n  //   todo.completed = !todo.completed;\n  // }\n  // onDelete(todo) {\n  //   console.log(\"delete\");\n  // }\n}\n","<!-- <div [ngClass]=\"setClasses()\">\n  <p>\n    <input (change)=\"onToggle(todo)\" type=\"checkbox\" />\n    {{ todo.title }}\n    <button (click)=\"onDelete(todo)\" class=\"del\">x</button>\n  </p>\n  <input type=\"text\" [(ngModel)]=\"name\" />\n  <h3>You type {{ name }}</h3>\n</div> -->\n\n<div class=\"service\">\n  <h2 class=\"Servicename\">{{ todo.ServiceName }}</h2>\n\n  <ng-template [ngIf]=\"todo.ServiceTime1 != ''\">\n    <h5 class=\"ServiceDetails\">\n      {{ todo.ServiceTime1 }} {{ todo.ServiceTime1Price }}\n    </h5>\n  </ng-template>\n\n  <ng-template [ngIf]=\"todo.ServiceTime2 != ''\">\n    <h5 class=\"ServiceDetails\">\n      {{ todo.ServiceTime2 }} {{ todo.ServiceTime2Price }}\n    </h5>\n  </ng-template>\n\n  <ng-template [ngIf]=\"todo.ServiceTime3 != ''\">\n    <h5 class=\"ServiceDetails\">\n      {{ todo.ServiceTime3 }} {{ todo.ServiceTime3Price }}\n    </h5>\n  </ng-template>\n\n  <ng-template [ngIf]=\"todo.ServiceTime4 != ''\">\n    <h5 class=\"ServiceDetails\">\n      {{ todo.ServiceTime4 }} {{ todo.ServiceTime4Price }}\n    </h5>\n  </ng-template>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Todo } from \"../../models/Todo\";\n@Component({\n  selector: \"app-todos\",\n  templateUrl: \"./todos.component.html\",\n  styleUrls: [\"./todos.component.css\"]\n})\nexport class TodosComponent implements OnInit {\n  todos: Todo[];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.todos = [\n      {\n        id: 1,\n        ServiceName: \"Back\",\n        ServiceTime1: \"30 minutes\",\n        ServiceTime2: \"45 minutes\",\n        ServiceTime3: \"60 minutes\",\n        ServiceTime4: \"90 minutes\",\n        ServiceTime1Price: \"$ 30\",\n        ServiceTime2Price: \"$ 40 \",\n        ServiceTime3Price: \"$ 45\",\n        ServiceTime4Price: \"$ 65\"\n      },\n      {\n        id: 2,\n        ServiceName: \"Foot\",\n        ServiceTime1: \"30 minutes\",\n        ServiceTime2: \"60 minutes\",\n        ServiceTime3: \"90 minutes\",\n        ServiceTime4: \"\",\n        ServiceTime1Price: \"$ 30\",\n        ServiceTime2Price: \"$ 60 \",\n        ServiceTime3Price: \"$ 95\",\n        ServiceTime4Price: \"\"\n      },\n      {\n        id: 3,\n        ServiceName: \"Facial\",\n        ServiceTime1: \"60 minutes\",\n        ServiceTime2: \"\",\n        ServiceTime3: \"\",\n        ServiceTime4: \"\",\n        ServiceTime1Price: \"$ 60\",\n        ServiceTime2Price: \"\",\n        ServiceTime3Price: \"\",\n        ServiceTime4Price: \"\"\n      },\n      {\n        id: 4,\n        ServiceName: \"Mini Facial\",\n        ServiceTime1: \"30 minutes\",\n        ServiceTime2: \"\",\n        ServiceTime3: \"\",\n        ServiceTime4: \"\",\n        ServiceTime1Price: \"$ 35\",\n        ServiceTime2Price: \"\",\n        ServiceTime3Price: \"\",\n        ServiceTime4Price: \"\"\n      },\n      {\n        id: 5,\n        ServiceName: \"Cupping\",\n        ServiceTime1: \"15 minutes\",\n        ServiceTime2: \"\",\n        ServiceTime3: \"\",\n        ServiceTime4: \"\",\n        ServiceTime1Price: \"$ 15\",\n        ServiceTime2Price: \"\",\n        ServiceTime3Price: \"\",\n        ServiceTime4Price: \"\"\n      },\n      {\n        id: 6,\n        ServiceName: \"Scraping\",\n        ServiceTime1: \"15 minutes\",\n        ServiceTime2: \"\",\n        ServiceTime3: \"\",\n        ServiceTime4: \"\",\n        ServiceTime1Price: \"$ 15\",\n        ServiceTime2Price: \"\",\n        ServiceTime3Price: \"\",\n        ServiceTime4Price: \"\"\n      }\n    ];\n  }\n}\n","<html lang=\"en\">\n  <head>\n    <title>TangChao Spa</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <div class=\"topnav\">\n      <h3 style=\"margin-top: 35px\">Phone: 718-865-7756</h3>\n\n      <h3>Address: 1112 Avenue U Brooklyn,NY 11223</h3>\n      <a href=\"#service\">Service</a>\n      <a href=\"#sample\">Sample </a>\n      <a href=\"#contact\">Contact</a>\n    </div>\n\n    <div class=\"header\">\n      <!-- <h1 class=\"storeTitle\">TangChao Spa</h1>\n      <div style=\"text-align: right\">\n        <img src=\"assets/image/icon.jpeg\" width=\"100\" />\n      </div> -->\n      <div class=\"titleIcon\">\n        <h1 style=\"display: inline-block; \" class=\"storeTitle\">TangChao Spa</h1>\n        <img\n          style=\"display: inline-block\"\n          src=\"assets/image/sp.png\"\n          width=\"100\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"column2\">\n        <img\n          src=\"assets/image/icon.jpeg\"\n          alt=\"Snow\"\n          style=\"width:100% ;height:400px\"\n        />\n      </div>\n      <div class=\"column2\">\n        <img\n          src=\"assets/image/icon2.jpeg\"\n          alt=\"Forest\"\n          style=\"width:100%;height:400px\"\n        />\n      </div>\n    </div>\n\n    <h1 id=\"service\" class=\"storeTitle2\">Service we are offering</h1>\n\n    <app-todo-item *ngFor=\"let todo of todos\" [todo]=\"todo\"> </app-todo-item>\n\n    <h1 id=\"sample\" class=\"imageTitle\">Sample Show</h1>\n\n    <div class=\"row\">\n      <div class=\"column\">\n        <img src=\"assets/image/spa1.jpeg\" alt=\"Snow\" style=\"width:100%\" />\n      </div>\n      <div class=\"column\">\n        <img src=\"assets/image/spa2.jpeg\" alt=\"Forest\" style=\"width:100%\" />\n      </div>\n      <div class=\"column\">\n        <img src=\"assets/image/spa3.jpeg\" alt=\"Mountains\" style=\"width:100%\" />\n      </div>\n      <div class=\"column\">\n        <img src=\"assets/image/spa4.jpeg\" alt=\"Snow\" style=\"width:100%\" />\n      </div>\n      <div class=\"column\">\n        <img src=\"assets/image/spa5.jpeg\" alt=\"Forest\" style=\"width:100%\" />\n      </div>\n      <div class=\"column\">\n        <img src=\"assets/image/spa6.jpeg\" alt=\"Mountains\" style=\"width:100%\" />\n      </div>\n    </div>\n    <div id=\"contact\" class=\"footer\">\n      <h2>Contact</h2>\n      <h3>Phone: 718-865-7756</h3>\n      <h3>Address: 1112 Avenue U Brooklyn,NY 11223</h3>\n      <h3>Open 7 days a week 11:00 am to 10:00 pm</h3>\n      <h6>©2020 TangChao Spa</h6>\n      <h6>All Rights Reserved</h6>\n      <h6>ZYH & LJY</h6>\n    </div>\n  </body>\n</html>\n","export class Customer {\n  constructor(\n    public id: number,\n    public name: string,\n    public phone: string,\n    public date: string,\n    public time: string,\n    public detail: string,\n    public other: string,\n    public completed: boolean\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { Customer } from './models/Customer';\n\nexport class Customer {\n  constructor(\n    public id: number,\n    public name: string,\n    public phone: string,\n    public date: string,\n    public time: string,\n    public detail: string,\n    public other: string,\n    public completed: boolean\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestapiService {\n  public baseUrl: string = 'https://tangchaospa.herokuapp.com';\n  //need to fix this later\n  constructor(private http: HttpClient) {}\n  public getCustomers() {\n    return this.http.get<Customer[]>(this.baseUrl + '/allCustomer');\n  }\n  public deleteCustomer(customer) {\n    return this.http.delete<Customer>(\n      this.baseUrl + '/deleteCustomer' + '/' + customer.id\n    );\n  }\n  public changeCompleted(customer) {\n    return this.http.put<Customer>(\n      this.baseUrl + '/changeCustomerCompleted' + '/' + customer.id,\n      customer\n    );\n  }\n\n  public addCustomer(customer) {\n    return this.http.post<Customer>(this.baseUrl + '/addCustomer', customer);\n  }\n  public updateCustomer(customer) {\n    return this.http.put<Customer>(this.baseUrl + '/updateCustomer', customer);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGaurdService {\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) {}\n  public canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    if (this.authService.isUserLoggedIn()) return true;\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Customer } from '../restapi.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  constructor(private http: HttpClient) {}\n  authenticate(username, password) {\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(username + ':' + password)\n    });\n    return this.http\n      .get<Customer[]>('https://tangchaospa.herokuapp.com/allCustomer', {\n        headers\n      })\n      .pipe(\n        map(userData => {\n          sessionStorage.setItem('username', username);\n          let authString = 'Basic ' + btoa(username + ':' + password);\n          sessionStorage.setItem('basicauth', authString);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('username');\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem('username');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthHttpInterceptService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (\n      sessionStorage.getItem('username') &&\n      sessionStorage.getItem('basicauth')\n    ) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('basicauth')\n        }\n      });\n    }\n\n    return next.handle(req);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}